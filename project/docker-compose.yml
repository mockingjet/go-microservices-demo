version: "3"

services:
  front-end:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./../front-end:/app
    working_dir: /app
    command: ["./frontApp"]
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./../broker-service:/app
    working_dir: /app
    command: sleep infinity
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "8081:80"
    volumes:
      - ./../auth-service:/app
    working_dir: /app
    command: ["./authApp"]
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "8082:80"
    volumes:
      - ./../logger-service:/app
    working_dir: /app
    command: ["./loggerApp"]
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "8083:80"
    volumes:
      - ./../mailer-service:/app
    working_dir: /app
    command: ["./mailerApp"]
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  listener-service:
    image: golang:1.18-alpine
    restart: always
    ports:
      - "8084:80"
    volumes:
      - ./../listener-service:/app
    working_dir: /app
    command: sleep infinity
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
